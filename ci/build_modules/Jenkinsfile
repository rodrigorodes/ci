def modules = []
modules = env.Module.toString().split(",")
def runAll = "".equals(modules[0])
def gitBranch = env.BRANCH_NAME

pipeline {
    agent {
        node {
            label 'master'
        }
    }

    stages {
        stage('SCM') {
            steps {
                script {
                    if (null == gitBranch || "".equals(gitBranch)) {
                        gitBranch = scm.branches[0].name
                    }

                    gitBranch = gitBranch.replace("*/", "").replace("refs/heads/","")
                }

                git url: 'https://github.com/rodrigorodes/ci.git', branch: "$gitBranch"
            }
        }

        stage ('Build') {
         
            git url: 'https://github.com/cyrille-leclerc/multi-module-maven-project'
         
            withMaven(
                // Maven installation declared in the Jenkins "Global Tool Configuration"
                maven: 'M3',
                // Maven settings.xml file defined with the Jenkins Config File Provider Plugin
                // Maven settings and global settings can also be defined in Jenkins Global Tools Configuration
                mavenSettingsConfig: 'my-maven-settings',
                mavenLocalRepo: '.repository') {
         

            } // withMaven will discover the generated Maven artifacts, JUnit Surefire & FailSafe & FindBugs reports...
        }

        stage('Generate Artifacts') {
            steps {
                script {
                    dir (env.WORKSPACE) {
                        sh 'mvn clean install'
                   }
                }
            }

            post {
                success {
                  archiveArtifacts artifacts: "**/target/*", fingerprint: true
                }
            }
        }
    }
}
